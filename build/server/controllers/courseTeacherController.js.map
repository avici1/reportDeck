{"version":3,"sources":["../../../api/server/controllers/courseTeacherController.js"],"names":["util","Util","courseTeacherController","req","res","id","params","ctService","getOne_","one","Object","values","length","setSuccess","send","setError","message","getAll","list","data","body","date","Date","teacherId_","teachername","slice","Math","floor","random","getFullYear","courseId_","courseName","dataToadd","classId","addNew","added","updater","updated","deleter","deleted"],"mappings":"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","sourcesContent":["import ctService from '../services/courseTeacherService';\nimport Util from '../utils/Util';\n\nconst util = new Util();\n\nclass courseTeacherController {\n    static async getOne(req, res) {\n        const {\n            id\n        } = req.params;\n        try {\n            \n            const one = await ctService.getOne_(id);\n            if (Object.values(one).length >= 1) {\n                util.setSuccess(\"Found\", 200, one);\n                return util.send(res);\n            } else {\n                util.setError(400, \"Can't find what You are looking for\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, `A problem occured >> ${error.message}`);\n            return util.send(res);\n        }\n    }\n    static async getAll(req, res) {\n        try {\n            const list = await ctService.getAll();\n            if (Object.values(list).length >= 1) {\n                util.setSuccess(\"Found \", 200, list);\n                return util.send(res);\n            } else {\n                util.setError(400, \"A problem occured can't find any data\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"an error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async adder(req, res) {\n        try {\n            const data = req.body;\n            const date = new Date();\n            const teacherId_ = req.body.teachername.slice(0,3) + '-'+Math.floor((Math.random() * 100)) + '-' +date.getFullYear();\n            const courseId_ = req.body.courseName.slice(0,3) + '-'+ Math.floor((Math.random() * 100)) + '-' +date.getFullYear();\n            const dataToadd = {\n                \"teachername\":req.body.teachername,\n                \"teacherId\":teacherId_,\n                \"courseName\":req.body.courseName,\n                \"courseId\":courseId_,\n                \"classId\":req.body.classId\n            };\n            if ((Object.values(data).length < 3) == false) {\n                const added = await ctService.addNew(dataToadd);\n                util.setSuccess(\"Added successfully\", 200, added);\n                return util.send(res);\n            } else {\n                util.setError(400, \"can't add\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"an error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async udpdate(req, res) {\n        try {\n            const {id} = req.params;\n            const data = req.body;\n            if (Object.values(data).length >= 1) {\n                const updated = await ctService.updater(id, data);\n                util.setSuccess(\"Updated successfully\", 200, updated);\n                return util.send(res);\n            } else {\n                util.setError(400, \"C'mon you got to atleast update one\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"An error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async delete(req, res) {\n        try {\n            const {id} = req.params;\n            const deleted = await ctService.deleter(id);\n            if (deleted) {\n                util.setSuccess(\"Deleted successfully\", 200, deleted);\n                return util.send(res);\n            }else{\n                util.setError(400,\"Can't delete may be it's already gone\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"An error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n}\nexport default courseTeacherController;"],"file":"courseTeacherController.js"}