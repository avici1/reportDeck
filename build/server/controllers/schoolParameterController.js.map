{"version":3,"sources":["../../../api/server/controllers/schoolParameterController.js"],"names":["util","Util","schoolParameterController","req","res","body","schoolp","addNew","added","setError","send","setSuccess","id","params","updated","Number","Object","values","length","updater","updated_class","message","getAll","all"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA,IAAMA,IAAI,GAAG,IAAIC,gBAAJ,EAAb;;IACMC,yB;;;;;;;;;;;;oDACkBC,G,EAAKC,G;;;;;;;AAEXC,gBAAAA,I,GAAOF,GAAG,CAACE,I;;uBACGC,oCAAQC,MAAR,CAAeF,IAAf,C;;;AAAdG,gBAAAA,K;;oBACDH,I;;;;;AACDL,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,wBAAnB;iDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;AAEPJ,gBAAAA,IAAI,CAACW,UAAL,CAAgB,mBAAhB,EAAqC,GAArC,EAA0CH,KAA1C;iDACOR,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;AAGXJ,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,wBAAnB;iDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;;;qDAGWD,G,EAAKC,G;;;;;;AACnBQ,gBAAAA,E,GAAOT,GAAG,CAACU,M,CAAXD,E;AACFE,gBAAAA,O,GAAUX,GAAG,CAACE,I;;oBACfU,MAAM,CAACH,EAAD,C;;;;;AACPZ,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,kCAAnB;kDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;sBAKEY,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuBI,MAAvB,IAAiC,CAAlC,IAAwC,K;;;;;AACxClB,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd;kDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;uBAEqBE,oCAAQa,OAAR,CAAgBP,EAAhB,EAAoBE,OAApB,C;;;AAAtBM,gBAAAA,a;;oBACDA,a;;;;;AACDpB,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd;kDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;AAEPJ,gBAAAA,IAAI,CAACW,UAAL,CAAgB,oCAAhB,EAAsD,GAAtD,EAA2DS,aAA3D;kDACOpB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;AAMfJ,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,uDAAuD,aAAMY,OAAhF;kDACOrB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;QAInB;;;;;;;qDACoBD,G,EAAKC,G;;;;;;;;uBAECE,oCAAQgB,MAAR,E;;;AAAZC,gBAAAA,G;;oBACDA,G;;;;;AACDvB,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,wBAAnB;kDACOT,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;AAEPJ,gBAAAA,IAAI,CAACW,UAAL,CAAgB,4BAAhB,EAA8C,GAA9C,EAAmDY,GAAnD;kDACOvB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;AAGXJ,gBAAAA,IAAI,CAACS,QAAL,CAAc,GAAd,EAAmB,aAAMY,OAAzB;kDACOrB,IAAI,CAACU,IAAL,CAAUN,GAAV,C;;;;;;;;;;;;;;;;;;;;eAIJF,yB","sourcesContent":["import schoolp from '../services/schoolparameterServices';\nimport Util from '../utils/Util';\nconst util = new Util();\nclass schoolParameterController {\n    static async addNew(req, res) {\n        try {\n            const body = req.body;\n            const added = await schoolp.addNew(body);\n            if (!body) {\n                util.setError(400, \"can't add a new record\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Sent successfully\", 200, added);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"can't add a new record\");\n            return util.send(res);\n        }\n    }\n    static async updateSchool(req, res) {\n        const { id } = req.params;\n        const updated = req.body;\n        if (!Number(id)) {\n            util.setError(404, 'Please provide a valid parameter');\n            return util.send(res);\n\n        } else {\n            try {\n\n                if ((Object.values(updated).length >= 1) == false) {\n                    util.setError(404, `sent empty fields`);\n                    return util.send(res);\n                } else {\n                    const updated_class = await schoolp.updater(id, updated);\n                    if (!updated_class) {\n                        util.setError(404, `cant update a class`);\n                        return util.send(res);\n                    } else {\n                        util.setSuccess('School record updated successfully', 200, updated_class);\n                        return util.send(res);\n                    }\n\n                }\n\n            } catch (error) {\n                util.setError(404, 'Oops something Went wrong cant update the book >> ' + error.message);\n                return util.send(res);\n            }\n        }\n    }\n    //No delete options available\n    static async getAll(req, res) {\n        try {\n            const all = await schoolp.getAll();\n            if (!all) {\n                util.setError(400, \"Records can't be found\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Records found successfully\", 200, all);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n}\nexport default schoolParameterController;"],"file":"schoolParameterController.js"}