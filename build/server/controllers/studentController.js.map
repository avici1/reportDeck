{"version":3,"sources":["../../../api/server/controllers/studentController.js"],"names":["util","Util","studentController","req","res","studentService","getAllStudent","all","setError","send","setSuccess","message","id","params","getOneStudent","one","deleteStudent","deleted","addee","body","addStudent","added","updated","Object","values","length","UpdateStudent","updated_class"],"mappings":"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","sourcesContent":["import studentService from '../services/studentServices';\nimport Util from '../utils/Util';\nconst util = new Util();\nclass studentController {\n\n\n    static async getAll(req, res) {\n        try {\n            const all = await studentService.getAllStudent();\n            if (!all) {\n                util.setError(400, \"Students can't be found\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Students found successfully\", 200, all);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message + ' controller');\n            return util.send(res);\n        }\n    }\n    static async getParticular(req, res) {\n        try {\n            const id = req.params;\n            const one = await studentService.getOneStudent(id);\n            if (!one) {\n                util.setError(400, \"Student can't be found\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Student found\", 200, one);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async deleter(req, res) {\n        try {\n            const id = req.params;\n            const deleted = await studentService.deleteStudent(id);\n            if (!deleted) {\n                util.setError(400, \"Student can't be found\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Deleted successfully\", 200, deleted);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message );\n            return util.send(res);\n        }\n    }\n    static async adder(req, res) {\n        try {\n            const addee = req.body;\n            const added = await studentService.addStudent(addee);\n            if (!added) {\n                util.setError(400, \"Student can't be added\");\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Added successfully\", 200, added);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async updater(req, res) {\n        const { id } = req.params;\n        const updated = req.body;\n\n\n        try {\n\n            if ((Object.values(updated).length >= 1) == false) {\n                util.setError(404, `sent empty fields`);\n                return util.send(res);\n            } else {\n                const updated_class = await studentService.UpdateStudent(id, updated);\n                if (!updated_class) {\n                    util.setError(404, `cant update a class`);\n                    return util.send(res);\n                } else {\n                    util.setSuccess('Classes updated successfully', 200, updated_class);\n                    return util.send(res);\n                }\n\n            }\n\n        } catch (error) {\n            util.setError(404, 'Oops something Went wrong cant update the book >> ' + error.message);\n            return util.send(res);\n        }\n\n    }\n}\nexport default studentController;"],"file":"studentController.js"}