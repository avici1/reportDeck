{"version":3,"sources":["../../../api/server/controllers/staffController.js"],"names":["util","Util","staffController","req","res","staffService","GetAllStaff","staffList","length","setSuccess","send","setError","message","searchTeacher","teachers","Object","values","newStaff","body","date","Date","staffId_","staffNames","slice","Math","floor","random","getFullYear","newstaffToAdd","staffId","staffTitle","AddStaff","addedStaff","id","params","SearchStaff","staff","updated","staffToUpdate","UpdateStaff","DeleteStaff","deletedStaff"],"mappings":"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","sourcesContent":["import Util from '../utils/Util';\nimport staffService from '../services/staffServices';\nconst util = new Util();\n\n\nclass staffController {\n\n    static async getListStaff(req, res) {\n        try {\n            const staffList = await staffService.GetAllStaff();\n            if (staffList.length > 0) {\n                util.setSuccess(\"Staff found successfully\", 200, staffList);\n                return util.send(res);\n            } else {\n                util.setSuccess(\"Staff Not found\", 200, staffList);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async getTeachers(req,res) {\n        try {\n            const teachers = await staffService.searchTeacher();\n            if(Object.values(teachers).length >=1){\n                util.setSuccess(\"Teachers found success fully\",200,teachers);\n                return util.send(res);\n            }else{\n                util.setError(400,\"Teachers not found\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, `Something went wrong ${error.message}` );\n            return util.send(res);\n        }\n    }\n    static async AddNewStaff(req, res) {\n        try {\n            const newStaff = req.body;\n            const date = new Date();\n            const staffId_ = req.body.staffNames.slice(0,3) + '-' + Math.floor(Math.random() * 100) +'-'+date.getFullYear();\n            const newstaffToAdd = {\n                staffId : staffId_,\n                staffNames : req.body.staffNames,\n                staffTitle : req.body.staffTitle\n            };\n            if (!req.body.staffNames || !req.body.staffTitle) {\n                util.setError(400, \"Please send complete information\");\n                return util.send(res);\n            } else {\n                const addedStaff = await staffService.AddStaff(newstaffToAdd);\n                util.setSuccess(\"Staff added succefully\", 200, addedStaff);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async searchStaff(req, res) {\n        const { id } = req.params;\n        try {\n\n            if (!id) {\n                util.setError(400, `Please provide accurate search information Q is ${id}`);\n                return util.send(res);\n            } else {\n                const staff = await staffService.SearchStaff(id);\n                if ((Object.values(staff).length >= 1) == false) {\n                    util.setError(400, \"Can't find that staff\");\n                    return util.send(res);\n                } else {\n                    util.setSuccess(\"Staff found successfully\", 200, staff);\n                    return util.send(res);\n                }\n            }\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async updateStaff(req, res) {\n        try {\n            const { id } = req.params;\n            const updated = req.body;\n            if (!id) {\n                util.setError(400, \"Wrong search parameter\");\n                return util.send(res);\n            } else {\n                if ((Object.values(updated).length >= 1) == false) {\n                    util.setError(400, \"You sent empty body\");\n                    return util.send(res);\n                } else {\n                    const staffToUpdate = await staffService.SearchStaff(id);\n                    if (Object.values(staffToUpdate).length >=1) {\n                        util.setError(400, \"Can't find what you're trying to update\");\n                        return util.send(res);\n                    } else {\n                        const staff = await staffService.UpdateStaff(id, updated);\n                        util.setSuccess(\"Staff updated successfully\", 200, staff);\n                        return util.send(res);\n                    }\n\n                }\n            }\n\n        } catch (error) {\n            util.setError(400, error.message);\n            return util.send(res);\n        }\n    }\n    static async deleteStaff(req, res) {\n        const { id } = req.params;\n        if (!id) {\n            util.setError(404, 'Please provide a valid parameter');\n            return util.send(res);\n        } else {\n            try {\n                const deletedStaff = await staffService.DeleteStaff(id);\n                if (!deletedStaff) {\n                    util.setError(404, `Staff with Id ${id} not found`);\n                    return util.send(res);\n                } else {\n                    util.setSuccess(`Staff with Id ${id} deleted successfully`, 200, deletedStaff);\n                    return util.send(res);\n                }\n\n            } catch (error) {\n                util.setError(404, `can't delete the class  ${error.message}`);\n                return util.send(res);\n            }\n\n\n\n        }\n    }\n}\nexport default staffController;"],"file":"staffController.js"}