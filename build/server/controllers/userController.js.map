{"version":3,"sources":["../../../api/server/controllers/userController.js"],"names":["util","Util","UserController","req","res","hashed","bcrypt","genSalt","err","salt","hash","body","password","securedUser","accessLevel","username","userService","createNewUser","newUser","Object","values","length","setSuccess","send","setError","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,gBAAJ,EAAb;;IAEMC,c;;;;;;;;;;;;oDACsBC,G,EAAIC,G;;;;;;AACpBC,gBAAAA,M,GAAS,E;;;AAETC,qCAAOC,OAAP,CAAe,EAAf,EAAkB,UAACC,GAAD,EAAKC,IAAL,EAAY;AAC1BH,uCAAOI,IAAP,CAAYP,GAAG,CAACQ,IAAJ,CAASC,QAArB,EAA8BH,IAA9B,EAAmC,UAACD,GAAD,EAAKH,MAAL,EAAc;AAC7CF,oBAAAA,GAAG,CAACQ,IAAJ,CAASC,QAAT,GAAoBP,MAApB;AACH,mBAFD;AAGH,iBAJD;;AAKMQ,gBAAAA,W,GAAc;AAChBC,kBAAAA,WAAW,EAACX,GAAG,CAACQ,IAAJ,CAASG,WADL;AAEhBC,kBAAAA,QAAQ,EAACZ,GAAG,CAACQ,IAAJ,CAASI,QAFF;AAGhBH,kBAAAA,QAAQ,EAACP;AAHO,iB;;uBAKEW,yBAAYC,aAAZ,CAA0BJ,WAA1B,C;;;AAAhBK,gBAAAA,O;;sBACHC,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBG,MAAvB,IAAgC,C;;;;;AAC/BrB,gBAAAA,IAAI,CAACsB,UAAL,CAAgB,yBAAhB,EAA0C,GAA1C,EAA8CT,WAA9C;iDACOb,IAAI,CAACuB,IAAL,CAAUnB,GAAV,C;;;AAEPJ,gBAAAA,IAAI,CAACwB,QAAL,CAAc,GAAd,EAAkB,mBAAlB;iDACOxB,IAAI,CAACuB,IAAL,CAAUnB,GAAV,C;;;;;;;;;AAGXJ,gBAAAA,IAAI,CAACwB,QAAL,CAAc,GAAd,EAAkB,0BAAyB,YAAMC,OAAjD;iDACWzB,IAAI,CAACuB,IAAL,CAAUnB,GAAV,C;;;;;;;;;;;;;;;;;;;;eAIRF,c","sourcesContent":["import bcrypt from 'bcryptjs';\nimport Util from '../utils/Util';\nimport userService from '../services/userServices';\n\nconst util = new Util();\n\nclass UserController{\n    static async createUser(req,res){\n        var hashed = '';\n        try {\n            bcrypt.genSalt(10,(err,salt)=>{\n                bcrypt.hash(req.body.password,salt,(err,hashed)=>{\n                    req.body.password = hashed\n                });\n            });\n            const securedUser = {\n                accessLevel:req.body.accessLevel,\n                username:req.body.username,\n                password:hashed\n            }\n            const newUser = await userService.createNewUser(securedUser);\n            if(Object.values(newUser).length >=1){\n                util.setSuccess(\"User Added successfully\",200,securedUser);\n                return util.send(res);\n            }else{\n                util.setError(400,\"Couldn't add user\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400,\"A problem occured >> \" +error.message);\n                return util.send(res);\n        }\n    }\n}\nexport default UserController;"],"file":"userController.js"}