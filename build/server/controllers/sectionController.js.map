{"version":3,"sources":["../../../api/server/controllers/sectionController.js"],"names":["util","Util","sectionsController","req","res","id","params","sectionService","getOne","one","Object","values","length","setSuccess","send","setError","getAll","list","errorerror","message","data","body","addNew","added","updater","updated","deleter","deleted"],"mappings":"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","sourcesContent":["import sectionService from '../services/sectionServices';\nimport Util from '../utils/Util';\n\nconst util = new Util();\n\nclass sectionsController {\n    static async getOne(req, res) {\n        try {\n            const id = req.params;\n            const one = await sectionService.getOne(id);\n            if (Object.values(one).length == 1) {\n                util.setSuccess(\"Found\", 200, one);\n                return util.send(res);\n            } else {\n                util.setError(400, \"A problem occured\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"A problem occured\");\n            return util.send(res);\n        }\n    }\n    static async getAll(req, res) {\n        try {\n            const list = await sectionService.getAll();\n            if (Object.values(list).length >= 1) {\n                util.setSuccess(\"Found \", 200, list);\n                return util.send(res);\n            } else {\n                util.setError(400, \"A problem occured can't find list of Sections\");\n                return util.send(res);\n            }\n        } catch (error) {\n            errorerror\n            util.setError(400, \"an error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async adder(req, res) {\n        try {\n            const data = req.body;\n            if ((Object.values(data).length < 5) == false) {\n                const added = await sectionService.addNew(data);\n                util.setSuccess(\"Added successfully\", 200, added);\n                return util.send(res);\n            } else {\n                util.setError(400, \"can't add\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"an error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async udpdate(req, res) {\n        try {\n            const id = req.params;\n            const data = req.body;\n            if (Object.values(data).length >= 1) {\n                const updated = await sectionService.updater(id, data);\n                util.setSuccess(\"Updated successfully\", 200, updated);\n                return util.send(res);\n            } else {\n                util.setError(400, \"C'mon you got to atleast update one\");\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"An error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n    static async delete(req, res) {\n        try {\n            const id = req.params;\n            const deleted = await sectionService.deleter(id);\n            if (deleted) {\n                util.setSuccess(\"Deleted successfully\", 200, deleted);\n                return util.send(res);\n            }\n        } catch (error) {\n            util.setError(400, \"An error occured \" + error.message);\n            return util.send(res);\n        }\n    }\n}\nexport default sectionsController;"],"file":"sectionController.js"}